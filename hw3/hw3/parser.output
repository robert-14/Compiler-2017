Useless nonterminals

   test


Terminals which are not used

   MK_DOT
   ERROR


Useless rules

  112 test: assign_expr


State 52 conflicts: 1 shift/reduce
State 81 conflicts: 1 shift/reduce
State 83 conflicts: 1 shift/reduce
State 87 conflicts: 1 shift/reduce
State 206 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: global_decl_list
    2        | /* empty */

    3 global_decl_list: global_decl_list global_decl
    4                 | global_decl

    5 global_decl: decl_list function_decl
    6            | function_decl

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    8              | VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

   11 param_list: param_list MK_COMMA param
   12           | param

   13 param: type ID
   14      | type ID dim_fn

   15 dim_fn: MK_LB expr_null MK_RB
   16       | dim_fn MK_LB expr MK_RB

   17 expr_null: expr
   18          | /* empty */

   19 block: decl_list stmt_list
   20      | stmt_list
   21      | decl_list
   22      | /* empty */

   23 decl_list: decl_list decl
   24          | decl

   25 decl: type_decl
   26     | var_decl

   27 type_decl: TYPEDEF type id_list MK_SEMICOLON
   28          | TYPEDEF VOID id_list MK_SEMICOLON

   29 var_decl: type init_id_list MK_SEMICOLON
   30         | ID id_list MK_SEMICOLON

   31 type: INT
   32     | FLOAT

   33 id_list: ID
   34        | id_list MK_COMMA ID
   35        | id_list MK_COMMA ID dim_decl
   36        | ID dim_decl

   37 dim_decl: MK_LB cexpr MK_RB
   38         | dim_decl MK_LB cexpr MK_RB

   39 cexpr: cexpr OP_PLUS mcexpr
   40      | cexpr OP_MINUS mcexpr
   41      | mcexpr

   42 mcexpr: mcexpr OP_TIMES cfactor
   43       | mcexpr OP_DIVIDE cfactor
   44       | cfactor

   45 cfactor: CONST
   46        | MK_LPAREN cexpr MK_RPAREN

   47 init_id_list: init_id
   48             | init_id_list MK_COMMA init_id

   49 init_id: ID
   50        | ID dim_decl
   51        | ID OP_ASSIGN relop_expr

   52 stmt_list: stmt_list stmt
   53          | stmt

   54 stmt: MK_LBRACE block MK_RBRACE
   55     | WHILE MK_LPAREN nonempty_relop_expr_list MK_LPAREN stmt
   56     | FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt
   57     | var_ref OP_ASSIGN relop_expr MK_SEMICOLON
   58     | IF MK_LPAREN nonempty_relop_expr_list MK_LPAREN stmt
   59     | IF MK_LPAREN nonempty_relop_expr_list MK_LPAREN stmt ELSE stmt
   60     | ID MK_LPAREN param_list MK_RPAREN MK_SEMICOLON
   61     | ID MK_LPAREN MK_RPAREN MK_SEMICOLON
   62     | MK_SEMICOLON
   63     | RETURN MK_SEMICOLON
   64     | RETURN relop_expr MK_SEMICOLON

   65 assign_expr_list: nonempty_assign_expr_list
   66                 | /* empty */

   67 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr
   68                          | assign_expr

   69 assign_expr: ID OP_ASSIGN relop_expr
   70            | relop_expr

   71 relop_expr: relop_term
   72           | relop_expr OP_OR relop_term

   73 relop_term: relop_factor
   74           | relop_term OP_AND relop_factor

   75 relop_factor: expr
   76             | expr rel_op expr

   77 rel_op: OP_EQ
   78       | OP_GE
   79       | OP_LE
   80       | OP_NE
   81       | OP_GT
   82       | OP_LT

   83 relop_expr_list: nonempty_relop_expr_list
   84                | /* empty */

   85 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr
   86                         | relop_expr

   87 expr: expr add_op term
   88     | term

   89 add_op: OP_PLUS
   90       | OP_MINUS

   91 term: term mul_op factor
   92     | factor

   93 mul_op: OP_TIMES
   94       | OP_DIVIDE

   95 factor: MK_LPAREN relop_expr MK_RPAREN
   96       | OP_MINUS MK_LPAREN relop_expr MK_RPAREN
   97       | OP_NOT MK_LPAREN relop_expr MK_RPAREN
   98       | CONST
   99       | OP_MINUS CONST
  100       | OP_NOT CONST
  101       | ID MK_LPAREN relop_expr_list MK_RPAREN
  102       | OP_MINUS ID MK_LPAREN param_list MK_RPAREN
  103       | ID MK_LPAREN MK_RPAREN
  104       | OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  105       | var_ref
  106       | OP_MINUS var_ref
  107       | OP_NOT var_ref

  108 var_ref: ID
  109        | ID dim_list

  110 dim_list: dim_list MK_LB expr MK_RB
  111         | MK_LB expr MK_RB


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 7 8 9 10 13 14 30 33 34 35 36 49 50 51 60 61 69 101 102 103
    104 108 109
CONST (259) 45 98 99 100
VOID (260) 8 10 28
INT (261) 31
FLOAT (262) 32
IF (263) 58 59
ELSE (264) 59
WHILE (265) 55
FOR (266) 56
TYPEDEF (267) 27 28
OP_ASSIGN (268) 51 57 69
OP_OR (269) 72
OP_AND (270) 74
OP_NOT (271) 97 100 104 107
OP_EQ (272) 77
OP_NE (273) 80
OP_GT (274) 81
OP_LT (275) 82
OP_GE (276) 78
OP_LE (277) 79
OP_PLUS (278) 39 89
OP_MINUS (279) 40 90 96 99 102 106
OP_TIMES (280) 42 93
OP_DIVIDE (281) 43 94
MK_LB (282) 15 16 37 38 110 111
MK_RB (283) 15 16 37 38 110 111
MK_LPAREN (284) 7 8 9 10 46 55 56 58 59 60 61 95 96 97 101 102 103
    104
MK_RPAREN (285) 7 8 9 10 46 56 60 61 95 96 97 101 102 103 104
MK_LBRACE (286) 7 8 9 10 54
MK_RBRACE (287) 7 8 9 10 54
MK_COMMA (288) 11 34 35 48 67 85
MK_SEMICOLON (289) 27 28 29 30 56 57 60 61 62 63 64
MK_DOT (290)
ERROR (291)
RETURN (292) 63 64


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1 2, on right: 0
global_decl_list (40)
    on left: 3 4, on right: 1 3
global_decl (41)
    on left: 5 6, on right: 3 4
function_decl (42)
    on left: 7 8 9 10, on right: 5 6
param_list (43)
    on left: 11 12, on right: 7 8 11 60 102
param (44)
    on left: 13 14, on right: 11 12
dim_fn (45)
    on left: 15 16, on right: 14 16
expr_null (46)
    on left: 17 18, on right: 15
block (47)
    on left: 19 20 21 22, on right: 7 8 9 10 54
decl_list (48)
    on left: 23 24, on right: 5 19 21 23
decl (49)
    on left: 25 26, on right: 23 24
type_decl (50)
    on left: 27 28, on right: 25
var_decl (51)
    on left: 29 30, on right: 26
type (52)
    on left: 31 32, on right: 7 9 13 14 27 29
id_list (53)
    on left: 33 34 35 36, on right: 27 28 30 34 35
dim_decl (54)
    on left: 37 38, on right: 35 36 38 50
cexpr (55)
    on left: 39 40 41, on right: 37 38 39 40 46
mcexpr (56)
    on left: 42 43 44, on right: 39 40 41 42 43
cfactor (57)
    on left: 45 46, on right: 42 43 44
init_id_list (58)
    on left: 47 48, on right: 29 48
init_id (59)
    on left: 49 50 51, on right: 47 48
stmt_list (60)
    on left: 52 53, on right: 19 20 52
stmt (61)
    on left: 54 55 56 57 58 59 60 61 62 63 64, on right: 52 53 55 56
    58 59
assign_expr_list (62)
    on left: 65 66, on right: 56
nonempty_assign_expr_list (63)
    on left: 67 68, on right: 65 67
assign_expr (64)
    on left: 69 70, on right: 67 68
relop_expr (65)
    on left: 71 72, on right: 51 57 64 69 70 72 85 86 95 96 97
relop_term (66)
    on left: 73 74, on right: 71 72 74
relop_factor (67)
    on left: 75 76, on right: 73 74
rel_op (68)
    on left: 77 78 79 80 81 82, on right: 76
relop_expr_list (69)
    on left: 83 84, on right: 56 101 104
nonempty_relop_expr_list (70)
    on left: 85 86, on right: 55 58 59 83 85
expr (71)
    on left: 87 88, on right: 16 17 75 76 87 110 111
add_op (72)
    on left: 89 90, on right: 87
term (73)
    on left: 91 92, on right: 87 88 91
mul_op (74)
    on left: 93 94, on right: 91
factor (75)
    on left: 95 96 97 98 99 100 101 102 103 104 105 106 107,
    on right: 91 92
var_ref (76)
    on left: 108 109, on right: 57 105 106 107
dim_list (77)
    on left: 110 111, on right: 109 110


state 0

    0 $accept: . program $end

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    $default  reduce using rule 2 (program)

    program           go to state 6
    global_decl_list  go to state 7
    global_decl       go to state 8
    function_decl     go to state 9
    decl_list         go to state 10
    decl              go to state 11
    type_decl         go to state 12
    var_decl          go to state 13
    type              go to state 14


state 1

   30 var_decl: ID . id_list MK_SEMICOLON

    ID  shift, and go to state 15

    id_list  go to state 16


state 2

    8 function_decl: VOID . ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID . ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

    ID  shift, and go to state 17


state 3

   31 type: INT .

    $default  reduce using rule 31 (type)


state 4

   32 type: FLOAT .

    $default  reduce using rule 32 (type)


state 5

   27 type_decl: TYPEDEF . type id_list MK_SEMICOLON
   28          | TYPEDEF . VOID id_list MK_SEMICOLON

    VOID   shift, and go to state 18
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    type  go to state 19


state 6

    0 $accept: program . $end

    $end  shift, and go to state 20


state 7

    1 program: global_decl_list .
    3 global_decl_list: global_decl_list . global_decl

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    $default  reduce using rule 1 (program)

    global_decl    go to state 21
    function_decl  go to state 9
    decl_list      go to state 10
    decl           go to state 11
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 14


state 8

    4 global_decl_list: global_decl .

    $default  reduce using rule 4 (global_decl_list)


state 9

    6 global_decl: function_decl .

    $default  reduce using rule 6 (global_decl)


state 10

    5 global_decl: decl_list . function_decl
   23 decl_list: decl_list . decl

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    function_decl  go to state 22
    decl           go to state 23
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 14


state 11

   24 decl_list: decl .

    $default  reduce using rule 24 (decl_list)


state 12

   25 decl: type_decl .

    $default  reduce using rule 25 (decl)


state 13

   26 decl: var_decl .

    $default  reduce using rule 26 (decl)


state 14

    7 function_decl: type . ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type . ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   29 var_decl: type . init_id_list MK_SEMICOLON

    ID  shift, and go to state 24

    init_id_list  go to state 25
    init_id       go to state 26


state 15

   33 id_list: ID .
   36        | ID . dim_decl

    MK_LB  shift, and go to state 27

    $default  reduce using rule 33 (id_list)

    dim_decl  go to state 28


state 16

   30 var_decl: ID id_list . MK_SEMICOLON
   34 id_list: id_list . MK_COMMA ID
   35        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 29
    MK_SEMICOLON  shift, and go to state 30


state 17

    8 function_decl: VOID ID . MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID . MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

    MK_LPAREN  shift, and go to state 31


state 18

   28 type_decl: TYPEDEF VOID . id_list MK_SEMICOLON

    ID  shift, and go to state 15

    id_list  go to state 32


state 19

   27 type_decl: TYPEDEF type . id_list MK_SEMICOLON

    ID  shift, and go to state 15

    id_list  go to state 33


state 20

    0 $accept: program $end .

    $default  accept


state 21

    3 global_decl_list: global_decl_list global_decl .

    $default  reduce using rule 3 (global_decl_list)


state 22

    5 global_decl: decl_list function_decl .

    $default  reduce using rule 5 (global_decl)


state 23

   23 decl_list: decl_list decl .

    $default  reduce using rule 23 (decl_list)


state 24

    7 function_decl: type ID . MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID . MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   49 init_id: ID .
   50        | ID . dim_decl
   51        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 34
    MK_LB      shift, and go to state 27
    MK_LPAREN  shift, and go to state 35

    $default  reduce using rule 49 (init_id)

    dim_decl  go to state 36


state 25

   29 var_decl: type init_id_list . MK_SEMICOLON
   48 init_id_list: init_id_list . MK_COMMA init_id

    MK_COMMA      shift, and go to state 37
    MK_SEMICOLON  shift, and go to state 38


state 26

   47 init_id_list: init_id .

    $default  reduce using rule 47 (init_id_list)


state 27

   37 dim_decl: MK_LB . cexpr MK_RB

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    cexpr    go to state 41
    mcexpr   go to state 42
    cfactor  go to state 43


state 28

   36 id_list: ID dim_decl .
   38 dim_decl: dim_decl . MK_LB cexpr MK_RB

    MK_LB  shift, and go to state 44

    $default  reduce using rule 36 (id_list)


state 29

   34 id_list: id_list MK_COMMA . ID
   35        | id_list MK_COMMA . ID dim_decl

    ID  shift, and go to state 45


state 30

   30 var_decl: ID id_list MK_SEMICOLON .

    $default  reduce using rule 30 (var_decl)


state 31

    8 function_decl: VOID ID MK_LPAREN . param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID MK_LPAREN . MK_RPAREN MK_LBRACE block MK_RBRACE

    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    MK_RPAREN  shift, and go to state 46

    param_list  go to state 47
    param       go to state 48
    type        go to state 49


state 32

   28 type_decl: TYPEDEF VOID id_list . MK_SEMICOLON
   34 id_list: id_list . MK_COMMA ID
   35        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 29
    MK_SEMICOLON  shift, and go to state 50


state 33

   27 type_decl: TYPEDEF type id_list . MK_SEMICOLON
   34 id_list: id_list . MK_COMMA ID
   35        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 29
    MK_SEMICOLON  shift, and go to state 51


state 34

   51 init_id: ID OP_ASSIGN . relop_expr

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    relop_expr    go to state 57
    relop_term    go to state 58
    relop_factor  go to state 59
    expr          go to state 60
    term          go to state 61
    factor        go to state 62
    var_ref       go to state 63


state 35

    7 function_decl: type ID MK_LPAREN . param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID MK_LPAREN . MK_RPAREN MK_LBRACE block MK_RBRACE

    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    MK_RPAREN  shift, and go to state 64

    param_list  go to state 65
    param       go to state 48
    type        go to state 49


state 36

   38 dim_decl: dim_decl . MK_LB cexpr MK_RB
   50 init_id: ID dim_decl .

    MK_LB  shift, and go to state 44

    $default  reduce using rule 50 (init_id)


state 37

   48 init_id_list: init_id_list MK_COMMA . init_id

    ID  shift, and go to state 66

    init_id  go to state 67


state 38

   29 var_decl: type init_id_list MK_SEMICOLON .

    $default  reduce using rule 29 (var_decl)


state 39

   45 cfactor: CONST .

    $default  reduce using rule 45 (cfactor)


state 40

   46 cfactor: MK_LPAREN . cexpr MK_RPAREN

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    cexpr    go to state 68
    mcexpr   go to state 42
    cfactor  go to state 43


state 41

   37 dim_decl: MK_LB cexpr . MK_RB
   39 cexpr: cexpr . OP_PLUS mcexpr
   40      | cexpr . OP_MINUS mcexpr

    OP_PLUS   shift, and go to state 69
    OP_MINUS  shift, and go to state 70
    MK_RB     shift, and go to state 71


state 42

   41 cexpr: mcexpr .
   42 mcexpr: mcexpr . OP_TIMES cfactor
   43       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 72
    OP_DIVIDE  shift, and go to state 73

    $default  reduce using rule 41 (cexpr)


state 43

   44 mcexpr: cfactor .

    $default  reduce using rule 44 (mcexpr)


state 44

   38 dim_decl: dim_decl MK_LB . cexpr MK_RB

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    cexpr    go to state 74
    mcexpr   go to state 42
    cfactor  go to state 43


state 45

   34 id_list: id_list MK_COMMA ID .
   35        | id_list MK_COMMA ID . dim_decl

    MK_LB  shift, and go to state 27

    $default  reduce using rule 34 (id_list)

    dim_decl  go to state 75


state 46

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 76


state 47

    8 function_decl: VOID ID MK_LPAREN param_list . MK_RPAREN MK_LBRACE block MK_RBRACE
   11 param_list: param_list . MK_COMMA param

    MK_RPAREN  shift, and go to state 77
    MK_COMMA   shift, and go to state 78


state 48

   12 param_list: param .

    $default  reduce using rule 12 (param_list)


state 49

   13 param: type . ID
   14      | type . ID dim_fn

    ID  shift, and go to state 79


state 50

   28 type_decl: TYPEDEF VOID id_list MK_SEMICOLON .

    $default  reduce using rule 28 (type_decl)


state 51

   27 type_decl: TYPEDEF type id_list MK_SEMICOLON .

    $default  reduce using rule 27 (type_decl)


state 52

  101 factor: ID . MK_LPAREN relop_expr_list MK_RPAREN
  103       | ID . MK_LPAREN MK_RPAREN
  108 var_ref: ID .
  109        | ID . dim_list

    MK_LB      shift, and go to state 80
    MK_LPAREN  shift, and go to state 81

    MK_LPAREN  [reduce using rule 108 (var_ref)]
    $default   reduce using rule 108 (var_ref)

    dim_list  go to state 82


state 53

   98 factor: CONST .

    $default  reduce using rule 98 (factor)


state 54

   97 factor: OP_NOT . MK_LPAREN relop_expr MK_RPAREN
  100       | OP_NOT . CONST
  104       | OP_NOT . ID MK_LPAREN relop_expr_list MK_RPAREN
  107       | OP_NOT . var_ref

    ID         shift, and go to state 83
    CONST      shift, and go to state 84
    MK_LPAREN  shift, and go to state 85

    var_ref  go to state 86


state 55

   96 factor: OP_MINUS . MK_LPAREN relop_expr MK_RPAREN
   99       | OP_MINUS . CONST
  102       | OP_MINUS . ID MK_LPAREN param_list MK_RPAREN
  106       | OP_MINUS . var_ref

    ID         shift, and go to state 87
    CONST      shift, and go to state 88
    MK_LPAREN  shift, and go to state 89

    var_ref  go to state 90


state 56

   95 factor: MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    relop_expr    go to state 91
    relop_term    go to state 58
    relop_factor  go to state 59
    expr          go to state 60
    term          go to state 61
    factor        go to state 62
    var_ref       go to state 63


state 57

   51 init_id: ID OP_ASSIGN relop_expr .
   72 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 92

    $default  reduce using rule 51 (init_id)


state 58

   71 relop_expr: relop_term .
   74 relop_term: relop_term . OP_AND relop_factor

    OP_AND  shift, and go to state 93

    $default  reduce using rule 71 (relop_expr)


state 59

   73 relop_term: relop_factor .

    $default  reduce using rule 73 (relop_term)


state 60

   75 relop_factor: expr .
   76             | expr . rel_op expr
   87 expr: expr . add_op term

    OP_EQ     shift, and go to state 94
    OP_NE     shift, and go to state 95
    OP_GT     shift, and go to state 96
    OP_LT     shift, and go to state 97
    OP_GE     shift, and go to state 98
    OP_LE     shift, and go to state 99
    OP_PLUS   shift, and go to state 100
    OP_MINUS  shift, and go to state 101

    $default  reduce using rule 75 (relop_factor)

    rel_op  go to state 102
    add_op  go to state 103


state 61

   88 expr: term .
   91 term: term . mul_op factor

    OP_TIMES   shift, and go to state 104
    OP_DIVIDE  shift, and go to state 105

    $default  reduce using rule 88 (expr)

    mul_op  go to state 106


state 62

   92 term: factor .

    $default  reduce using rule 92 (term)


state 63

  105 factor: var_ref .

    $default  reduce using rule 105 (factor)


state 64

    9 function_decl: type ID MK_LPAREN MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 107


state 65

    7 function_decl: type ID MK_LPAREN param_list . MK_RPAREN MK_LBRACE block MK_RBRACE
   11 param_list: param_list . MK_COMMA param

    MK_RPAREN  shift, and go to state 108
    MK_COMMA   shift, and go to state 78


state 66

   49 init_id: ID .
   50        | ID . dim_decl
   51        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 34
    MK_LB      shift, and go to state 27

    $default  reduce using rule 49 (init_id)

    dim_decl  go to state 36


state 67

   48 init_id_list: init_id_list MK_COMMA init_id .

    $default  reduce using rule 48 (init_id_list)


state 68

   39 cexpr: cexpr . OP_PLUS mcexpr
   40      | cexpr . OP_MINUS mcexpr
   46 cfactor: MK_LPAREN cexpr . MK_RPAREN

    OP_PLUS    shift, and go to state 69
    OP_MINUS   shift, and go to state 70
    MK_RPAREN  shift, and go to state 109


state 69

   39 cexpr: cexpr OP_PLUS . mcexpr

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    mcexpr   go to state 110
    cfactor  go to state 43


state 70

   40 cexpr: cexpr OP_MINUS . mcexpr

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    mcexpr   go to state 111
    cfactor  go to state 43


state 71

   37 dim_decl: MK_LB cexpr MK_RB .

    $default  reduce using rule 37 (dim_decl)


state 72

   42 mcexpr: mcexpr OP_TIMES . cfactor

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    cfactor  go to state 112


state 73

   43 mcexpr: mcexpr OP_DIVIDE . cfactor

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    cfactor  go to state 113


state 74

   38 dim_decl: dim_decl MK_LB cexpr . MK_RB
   39 cexpr: cexpr . OP_PLUS mcexpr
   40      | cexpr . OP_MINUS mcexpr

    OP_PLUS   shift, and go to state 69
    OP_MINUS  shift, and go to state 70
    MK_RB     shift, and go to state 114


state 75

   35 id_list: id_list MK_COMMA ID dim_decl .
   38 dim_decl: dim_decl . MK_LB cexpr MK_RB

    MK_LB  shift, and go to state 44

    $default  reduce using rule 35 (id_list)


state 76

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 115
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 116
    WHILE         shift, and go to state 117
    FOR           shift, and go to state 118
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 119
    MK_SEMICOLON  shift, and go to state 120
    RETURN        shift, and go to state 121

    $default  reduce using rule 22 (block)

    block      go to state 122
    decl_list  go to state 123
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 124
    stmt_list  go to state 125
    stmt       go to state 126
    var_ref    go to state 127


state 77

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 128


state 78

   11 param_list: param_list MK_COMMA . param

    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    param  go to state 129
    type   go to state 49


state 79

   13 param: type ID .
   14      | type ID . dim_fn

    MK_LB  shift, and go to state 130

    $default  reduce using rule 13 (param)

    dim_fn  go to state 131


state 80

  111 dim_list: MK_LB . expr MK_RB

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    expr     go to state 132
    term     go to state 61
    factor   go to state 62
    var_ref  go to state 63


state 81

  101 factor: ID MK_LPAREN . relop_expr_list MK_RPAREN
  103       | ID MK_LPAREN . MK_RPAREN

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56
    MK_RPAREN  shift, and go to state 133

    MK_RPAREN  [reduce using rule 84 (relop_expr_list)]

    relop_expr                go to state 134
    relop_term                go to state 58
    relop_factor              go to state 59
    relop_expr_list           go to state 135
    nonempty_relop_expr_list  go to state 136
    expr                      go to state 60
    term                      go to state 61
    factor                    go to state 62
    var_ref                   go to state 63


state 82

  109 var_ref: ID dim_list .
  110 dim_list: dim_list . MK_LB expr MK_RB

    MK_LB  shift, and go to state 137

    $default  reduce using rule 109 (var_ref)


state 83

  104 factor: OP_NOT ID . MK_LPAREN relop_expr_list MK_RPAREN
  108 var_ref: ID .
  109        | ID . dim_list

    MK_LB      shift, and go to state 80
    MK_LPAREN  shift, and go to state 138

    MK_LPAREN  [reduce using rule 108 (var_ref)]
    $default   reduce using rule 108 (var_ref)

    dim_list  go to state 82


state 84

  100 factor: OP_NOT CONST .

    $default  reduce using rule 100 (factor)


state 85

   97 factor: OP_NOT MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    relop_expr    go to state 139
    relop_term    go to state 58
    relop_factor  go to state 59
    expr          go to state 60
    term          go to state 61
    factor        go to state 62
    var_ref       go to state 63


state 86

  107 factor: OP_NOT var_ref .

    $default  reduce using rule 107 (factor)


state 87

  102 factor: OP_MINUS ID . MK_LPAREN param_list MK_RPAREN
  108 var_ref: ID .
  109        | ID . dim_list

    MK_LB      shift, and go to state 80
    MK_LPAREN  shift, and go to state 140

    MK_LPAREN  [reduce using rule 108 (var_ref)]
    $default   reduce using rule 108 (var_ref)

    dim_list  go to state 82


state 88

   99 factor: OP_MINUS CONST .

    $default  reduce using rule 99 (factor)


state 89

   96 factor: OP_MINUS MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    relop_expr    go to state 141
    relop_term    go to state 58
    relop_factor  go to state 59
    expr          go to state 60
    term          go to state 61
    factor        go to state 62
    var_ref       go to state 63


state 90

  106 factor: OP_MINUS var_ref .

    $default  reduce using rule 106 (factor)


state 91

   72 relop_expr: relop_expr . OP_OR relop_term
   95 factor: MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 92
    MK_RPAREN  shift, and go to state 142


state 92

   72 relop_expr: relop_expr OP_OR . relop_term

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    relop_term    go to state 143
    relop_factor  go to state 59
    expr          go to state 60
    term          go to state 61
    factor        go to state 62
    var_ref       go to state 63


state 93

   74 relop_term: relop_term OP_AND . relop_factor

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    relop_factor  go to state 144
    expr          go to state 60
    term          go to state 61
    factor        go to state 62
    var_ref       go to state 63


state 94

   77 rel_op: OP_EQ .

    $default  reduce using rule 77 (rel_op)


state 95

   80 rel_op: OP_NE .

    $default  reduce using rule 80 (rel_op)


state 96

   81 rel_op: OP_GT .

    $default  reduce using rule 81 (rel_op)


state 97

   82 rel_op: OP_LT .

    $default  reduce using rule 82 (rel_op)


state 98

   78 rel_op: OP_GE .

    $default  reduce using rule 78 (rel_op)


state 99

   79 rel_op: OP_LE .

    $default  reduce using rule 79 (rel_op)


state 100

   89 add_op: OP_PLUS .

    $default  reduce using rule 89 (add_op)


state 101

   90 add_op: OP_MINUS .

    $default  reduce using rule 90 (add_op)


state 102

   76 relop_factor: expr rel_op . expr

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    expr     go to state 145
    term     go to state 61
    factor   go to state 62
    var_ref  go to state 63


state 103

   87 expr: expr add_op . term

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    term     go to state 146
    factor   go to state 62
    var_ref  go to state 63


state 104

   93 mul_op: OP_TIMES .

    $default  reduce using rule 93 (mul_op)


state 105

   94 mul_op: OP_DIVIDE .

    $default  reduce using rule 94 (mul_op)


state 106

   91 term: term mul_op . factor

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    factor   go to state 147
    var_ref  go to state 63


state 107

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 115
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 116
    WHILE         shift, and go to state 117
    FOR           shift, and go to state 118
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 119
    MK_SEMICOLON  shift, and go to state 120
    RETURN        shift, and go to state 121

    $default  reduce using rule 22 (block)

    block      go to state 148
    decl_list  go to state 123
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 124
    stmt_list  go to state 125
    stmt       go to state 126
    var_ref    go to state 127


state 108

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 149


state 109

   46 cfactor: MK_LPAREN cexpr MK_RPAREN .

    $default  reduce using rule 46 (cfactor)


state 110

   39 cexpr: cexpr OP_PLUS mcexpr .
   42 mcexpr: mcexpr . OP_TIMES cfactor
   43       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 72
    OP_DIVIDE  shift, and go to state 73

    $default  reduce using rule 39 (cexpr)


state 111

   40 cexpr: cexpr OP_MINUS mcexpr .
   42 mcexpr: mcexpr . OP_TIMES cfactor
   43       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 72
    OP_DIVIDE  shift, and go to state 73

    $default  reduce using rule 40 (cexpr)


state 112

   42 mcexpr: mcexpr OP_TIMES cfactor .

    $default  reduce using rule 42 (mcexpr)


state 113

   43 mcexpr: mcexpr OP_DIVIDE cfactor .

    $default  reduce using rule 43 (mcexpr)


state 114

   38 dim_decl: dim_decl MK_LB cexpr MK_RB .

    $default  reduce using rule 38 (dim_decl)


state 115

   30 var_decl: ID . id_list MK_SEMICOLON
   60 stmt: ID . MK_LPAREN param_list MK_RPAREN MK_SEMICOLON
   61     | ID . MK_LPAREN MK_RPAREN MK_SEMICOLON
  108 var_ref: ID .
  109        | ID . dim_list

    ID         shift, and go to state 15
    MK_LB      shift, and go to state 80
    MK_LPAREN  shift, and go to state 150

    $default  reduce using rule 108 (var_ref)

    id_list   go to state 16
    dim_list  go to state 82


state 116

   58 stmt: IF . MK_LPAREN nonempty_relop_expr_list MK_LPAREN stmt
   59     | IF . MK_LPAREN nonempty_relop_expr_list MK_LPAREN stmt ELSE stmt

    MK_LPAREN  shift, and go to state 151


state 117

   55 stmt: WHILE . MK_LPAREN nonempty_relop_expr_list MK_LPAREN stmt

    MK_LPAREN  shift, and go to state 152


state 118

   56 stmt: FOR . MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_LPAREN  shift, and go to state 153


state 119

   54 stmt: MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 115
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 116
    WHILE         shift, and go to state 117
    FOR           shift, and go to state 118
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 119
    MK_SEMICOLON  shift, and go to state 120
    RETURN        shift, and go to state 121

    $default  reduce using rule 22 (block)

    block      go to state 154
    decl_list  go to state 123
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 124
    stmt_list  go to state 125
    stmt       go to state 126
    var_ref    go to state 127


state 120

   62 stmt: MK_SEMICOLON .

    $default  reduce using rule 62 (stmt)


state 121

   63 stmt: RETURN . MK_SEMICOLON
   64     | RETURN . relop_expr MK_SEMICOLON

    ID            shift, and go to state 52
    CONST         shift, and go to state 53
    OP_NOT        shift, and go to state 54
    OP_MINUS      shift, and go to state 55
    MK_LPAREN     shift, and go to state 56
    MK_SEMICOLON  shift, and go to state 155

    relop_expr    go to state 156
    relop_term    go to state 58
    relop_factor  go to state 59
    expr          go to state 60
    term          go to state 61
    factor        go to state 62
    var_ref       go to state 63


state 122

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 157


state 123

   19 block: decl_list . stmt_list
   21      | decl_list .
   23 decl_list: decl_list . decl

    ID            shift, and go to state 115
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 116
    WHILE         shift, and go to state 117
    FOR           shift, and go to state 118
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 119
    MK_SEMICOLON  shift, and go to state 120
    RETURN        shift, and go to state 121

    $default  reduce using rule 21 (block)

    decl       go to state 23
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 124
    stmt_list  go to state 158
    stmt       go to state 126
    var_ref    go to state 127


state 124

   29 var_decl: type . init_id_list MK_SEMICOLON

    ID  shift, and go to state 66

    init_id_list  go to state 25
    init_id       go to state 26


state 125

   20 block: stmt_list .
   52 stmt_list: stmt_list . stmt

    ID            shift, and go to state 159
    IF            shift, and go to state 116
    WHILE         shift, and go to state 117
    FOR           shift, and go to state 118
    MK_LBRACE     shift, and go to state 119
    MK_SEMICOLON  shift, and go to state 120
    RETURN        shift, and go to state 121

    $default  reduce using rule 20 (block)

    stmt     go to state 160
    var_ref  go to state 127


state 126

   53 stmt_list: stmt .

    $default  reduce using rule 53 (stmt_list)


state 127

   57 stmt: var_ref . OP_ASSIGN relop_expr MK_SEMICOLON

    OP_ASSIGN  shift, and go to state 161


state 128

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 115
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 116
    WHILE         shift, and go to state 117
    FOR           shift, and go to state 118
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 119
    MK_SEMICOLON  shift, and go to state 120
    RETURN        shift, and go to state 121

    $default  reduce using rule 22 (block)

    block      go to state 162
    decl_list  go to state 123
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 124
    stmt_list  go to state 125
    stmt       go to state 126
    var_ref    go to state 127


state 129

   11 param_list: param_list MK_COMMA param .

    $default  reduce using rule 11 (param_list)


state 130

   15 dim_fn: MK_LB . expr_null MK_RB

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    $default  reduce using rule 18 (expr_null)

    expr_null  go to state 163
    expr       go to state 164
    term       go to state 61
    factor     go to state 62
    var_ref    go to state 63


state 131

   14 param: type ID dim_fn .
   16 dim_fn: dim_fn . MK_LB expr MK_RB

    MK_LB  shift, and go to state 165

    $default  reduce using rule 14 (param)


state 132

   87 expr: expr . add_op term
  111 dim_list: MK_LB expr . MK_RB

    OP_PLUS   shift, and go to state 100
    OP_MINUS  shift, and go to state 101
    MK_RB     shift, and go to state 166

    add_op  go to state 103


state 133

  103 factor: ID MK_LPAREN MK_RPAREN .

    $default  reduce using rule 103 (factor)


state 134

   72 relop_expr: relop_expr . OP_OR relop_term
   86 nonempty_relop_expr_list: relop_expr .

    OP_OR  shift, and go to state 92

    $default  reduce using rule 86 (nonempty_relop_expr_list)


state 135

  101 factor: ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 167


state 136

   83 relop_expr_list: nonempty_relop_expr_list .
   85 nonempty_relop_expr_list: nonempty_relop_expr_list . MK_COMMA relop_expr

    MK_COMMA  shift, and go to state 168

    $default  reduce using rule 83 (relop_expr_list)


state 137

  110 dim_list: dim_list MK_LB . expr MK_RB

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    expr     go to state 169
    term     go to state 61
    factor   go to state 62
    var_ref  go to state 63


state 138

  104 factor: OP_NOT ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    $default  reduce using rule 84 (relop_expr_list)

    relop_expr                go to state 134
    relop_term                go to state 58
    relop_factor              go to state 59
    relop_expr_list           go to state 170
    nonempty_relop_expr_list  go to state 136
    expr                      go to state 60
    term                      go to state 61
    factor                    go to state 62
    var_ref                   go to state 63


state 139

   72 relop_expr: relop_expr . OP_OR relop_term
   97 factor: OP_NOT MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 92
    MK_RPAREN  shift, and go to state 171


state 140

  102 factor: OP_MINUS ID MK_LPAREN . param_list MK_RPAREN

    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    param_list  go to state 172
    param       go to state 48
    type        go to state 49


state 141

   72 relop_expr: relop_expr . OP_OR relop_term
   96 factor: OP_MINUS MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 92
    MK_RPAREN  shift, and go to state 173


state 142

   95 factor: MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 95 (factor)


state 143

   72 relop_expr: relop_expr OP_OR relop_term .
   74 relop_term: relop_term . OP_AND relop_factor

    OP_AND  shift, and go to state 93

    $default  reduce using rule 72 (relop_expr)


state 144

   74 relop_term: relop_term OP_AND relop_factor .

    $default  reduce using rule 74 (relop_term)


state 145

   76 relop_factor: expr rel_op expr .
   87 expr: expr . add_op term

    OP_PLUS   shift, and go to state 100
    OP_MINUS  shift, and go to state 101

    $default  reduce using rule 76 (relop_factor)

    add_op  go to state 103


state 146

   87 expr: expr add_op term .
   91 term: term . mul_op factor

    OP_TIMES   shift, and go to state 104
    OP_DIVIDE  shift, and go to state 105

    $default  reduce using rule 87 (expr)

    mul_op  go to state 106


state 147

   91 term: term mul_op factor .

    $default  reduce using rule 91 (term)


state 148

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 174


state 149

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 115
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 116
    WHILE         shift, and go to state 117
    FOR           shift, and go to state 118
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 119
    MK_SEMICOLON  shift, and go to state 120
    RETURN        shift, and go to state 121

    $default  reduce using rule 22 (block)

    block      go to state 175
    decl_list  go to state 123
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 124
    stmt_list  go to state 125
    stmt       go to state 126
    var_ref    go to state 127


state 150

   60 stmt: ID MK_LPAREN . param_list MK_RPAREN MK_SEMICOLON
   61     | ID MK_LPAREN . MK_RPAREN MK_SEMICOLON

    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    MK_RPAREN  shift, and go to state 176

    param_list  go to state 177
    param       go to state 48
    type        go to state 49


state 151

   58 stmt: IF MK_LPAREN . nonempty_relop_expr_list MK_LPAREN stmt
   59     | IF MK_LPAREN . nonempty_relop_expr_list MK_LPAREN stmt ELSE stmt

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    relop_expr                go to state 134
    relop_term                go to state 58
    relop_factor              go to state 59
    nonempty_relop_expr_list  go to state 178
    expr                      go to state 60
    term                      go to state 61
    factor                    go to state 62
    var_ref                   go to state 63


state 152

   55 stmt: WHILE MK_LPAREN . nonempty_relop_expr_list MK_LPAREN stmt

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    relop_expr                go to state 134
    relop_term                go to state 58
    relop_factor              go to state 59
    nonempty_relop_expr_list  go to state 179
    expr                      go to state 60
    term                      go to state 61
    factor                    go to state 62
    var_ref                   go to state 63


state 153

   56 stmt: FOR MK_LPAREN . assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 180
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    $default  reduce using rule 66 (assign_expr_list)

    assign_expr_list           go to state 181
    nonempty_assign_expr_list  go to state 182
    assign_expr                go to state 183
    relop_expr                 go to state 184
    relop_term                 go to state 58
    relop_factor               go to state 59
    expr                       go to state 60
    term                       go to state 61
    factor                     go to state 62
    var_ref                    go to state 63


state 154

   54 stmt: MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 185


state 155

   63 stmt: RETURN MK_SEMICOLON .

    $default  reduce using rule 63 (stmt)


state 156

   64 stmt: RETURN relop_expr . MK_SEMICOLON
   72 relop_expr: relop_expr . OP_OR relop_term

    OP_OR         shift, and go to state 92
    MK_SEMICOLON  shift, and go to state 186


state 157

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 10 (function_decl)


state 158

   19 block: decl_list stmt_list .
   52 stmt_list: stmt_list . stmt

    ID            shift, and go to state 159
    IF            shift, and go to state 116
    WHILE         shift, and go to state 117
    FOR           shift, and go to state 118
    MK_LBRACE     shift, and go to state 119
    MK_SEMICOLON  shift, and go to state 120
    RETURN        shift, and go to state 121

    $default  reduce using rule 19 (block)

    stmt     go to state 160
    var_ref  go to state 127


state 159

   60 stmt: ID . MK_LPAREN param_list MK_RPAREN MK_SEMICOLON
   61     | ID . MK_LPAREN MK_RPAREN MK_SEMICOLON
  108 var_ref: ID .
  109        | ID . dim_list

    MK_LB      shift, and go to state 80
    MK_LPAREN  shift, and go to state 150

    $default  reduce using rule 108 (var_ref)

    dim_list  go to state 82


state 160

   52 stmt_list: stmt_list stmt .

    $default  reduce using rule 52 (stmt_list)


state 161

   57 stmt: var_ref OP_ASSIGN . relop_expr MK_SEMICOLON

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    relop_expr    go to state 187
    relop_term    go to state 58
    relop_factor  go to state 59
    expr          go to state 60
    term          go to state 61
    factor        go to state 62
    var_ref       go to state 63


state 162

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 188


state 163

   15 dim_fn: MK_LB expr_null . MK_RB

    MK_RB  shift, and go to state 189


state 164

   17 expr_null: expr .
   87 expr: expr . add_op term

    OP_PLUS   shift, and go to state 100
    OP_MINUS  shift, and go to state 101

    $default  reduce using rule 17 (expr_null)

    add_op  go to state 103


state 165

   16 dim_fn: dim_fn MK_LB . expr MK_RB

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    expr     go to state 190
    term     go to state 61
    factor   go to state 62
    var_ref  go to state 63


state 166

  111 dim_list: MK_LB expr MK_RB .

    $default  reduce using rule 111 (dim_list)


state 167

  101 factor: ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 101 (factor)


state 168

   85 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA . relop_expr

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    relop_expr    go to state 191
    relop_term    go to state 58
    relop_factor  go to state 59
    expr          go to state 60
    term          go to state 61
    factor        go to state 62
    var_ref       go to state 63


state 169

   87 expr: expr . add_op term
  110 dim_list: dim_list MK_LB expr . MK_RB

    OP_PLUS   shift, and go to state 100
    OP_MINUS  shift, and go to state 101
    MK_RB     shift, and go to state 192

    add_op  go to state 103


state 170

  104 factor: OP_NOT ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 193


state 171

   97 factor: OP_NOT MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 97 (factor)


state 172

   11 param_list: param_list . MK_COMMA param
  102 factor: OP_MINUS ID MK_LPAREN param_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 194
    MK_COMMA   shift, and go to state 78


state 173

   96 factor: OP_MINUS MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 96 (factor)


state 174

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 9 (function_decl)


state 175

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 195


state 176

   61 stmt: ID MK_LPAREN MK_RPAREN . MK_SEMICOLON

    MK_SEMICOLON  shift, and go to state 196


state 177

   11 param_list: param_list . MK_COMMA param
   60 stmt: ID MK_LPAREN param_list . MK_RPAREN MK_SEMICOLON

    MK_RPAREN  shift, and go to state 197
    MK_COMMA   shift, and go to state 78


state 178

   58 stmt: IF MK_LPAREN nonempty_relop_expr_list . MK_LPAREN stmt
   59     | IF MK_LPAREN nonempty_relop_expr_list . MK_LPAREN stmt ELSE stmt
   85 nonempty_relop_expr_list: nonempty_relop_expr_list . MK_COMMA relop_expr

    MK_LPAREN  shift, and go to state 198
    MK_COMMA   shift, and go to state 168


state 179

   55 stmt: WHILE MK_LPAREN nonempty_relop_expr_list . MK_LPAREN stmt
   85 nonempty_relop_expr_list: nonempty_relop_expr_list . MK_COMMA relop_expr

    MK_LPAREN  shift, and go to state 199
    MK_COMMA   shift, and go to state 168


state 180

   69 assign_expr: ID . OP_ASSIGN relop_expr
  101 factor: ID . MK_LPAREN relop_expr_list MK_RPAREN
  103       | ID . MK_LPAREN MK_RPAREN
  108 var_ref: ID .
  109        | ID . dim_list

    OP_ASSIGN  shift, and go to state 200
    MK_LB      shift, and go to state 80
    MK_LPAREN  shift, and go to state 81

    $default  reduce using rule 108 (var_ref)

    dim_list  go to state 82


state 181

   56 stmt: FOR MK_LPAREN assign_expr_list . MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  shift, and go to state 201


state 182

   65 assign_expr_list: nonempty_assign_expr_list .
   67 nonempty_assign_expr_list: nonempty_assign_expr_list . MK_COMMA assign_expr

    MK_COMMA  shift, and go to state 202

    $default  reduce using rule 65 (assign_expr_list)


state 183

   68 nonempty_assign_expr_list: assign_expr .

    $default  reduce using rule 68 (nonempty_assign_expr_list)


state 184

   70 assign_expr: relop_expr .
   72 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 92

    $default  reduce using rule 70 (assign_expr)


state 185

   54 stmt: MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 54 (stmt)


state 186

   64 stmt: RETURN relop_expr MK_SEMICOLON .

    $default  reduce using rule 64 (stmt)


state 187

   57 stmt: var_ref OP_ASSIGN relop_expr . MK_SEMICOLON
   72 relop_expr: relop_expr . OP_OR relop_term

    OP_OR         shift, and go to state 92
    MK_SEMICOLON  shift, and go to state 203


state 188

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 8 (function_decl)


state 189

   15 dim_fn: MK_LB expr_null MK_RB .

    $default  reduce using rule 15 (dim_fn)


state 190

   16 dim_fn: dim_fn MK_LB expr . MK_RB
   87 expr: expr . add_op term

    OP_PLUS   shift, and go to state 100
    OP_MINUS  shift, and go to state 101
    MK_RB     shift, and go to state 204

    add_op  go to state 103


state 191

   72 relop_expr: relop_expr . OP_OR relop_term
   85 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr .

    OP_OR  shift, and go to state 92

    $default  reduce using rule 85 (nonempty_relop_expr_list)


state 192

  110 dim_list: dim_list MK_LB expr MK_RB .

    $default  reduce using rule 110 (dim_list)


state 193

  104 factor: OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 104 (factor)


state 194

  102 factor: OP_MINUS ID MK_LPAREN param_list MK_RPAREN .

    $default  reduce using rule 102 (factor)


state 195

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 7 (function_decl)


state 196

   61 stmt: ID MK_LPAREN MK_RPAREN MK_SEMICOLON .

    $default  reduce using rule 61 (stmt)


state 197

   60 stmt: ID MK_LPAREN param_list MK_RPAREN . MK_SEMICOLON

    MK_SEMICOLON  shift, and go to state 205


state 198

   58 stmt: IF MK_LPAREN nonempty_relop_expr_list MK_LPAREN . stmt
   59     | IF MK_LPAREN nonempty_relop_expr_list MK_LPAREN . stmt ELSE stmt

    ID            shift, and go to state 159
    IF            shift, and go to state 116
    WHILE         shift, and go to state 117
    FOR           shift, and go to state 118
    MK_LBRACE     shift, and go to state 119
    MK_SEMICOLON  shift, and go to state 120
    RETURN        shift, and go to state 121

    stmt     go to state 206
    var_ref  go to state 127


state 199

   55 stmt: WHILE MK_LPAREN nonempty_relop_expr_list MK_LPAREN . stmt

    ID            shift, and go to state 159
    IF            shift, and go to state 116
    WHILE         shift, and go to state 117
    FOR           shift, and go to state 118
    MK_LBRACE     shift, and go to state 119
    MK_SEMICOLON  shift, and go to state 120
    RETURN        shift, and go to state 121

    stmt     go to state 207
    var_ref  go to state 127


state 200

   69 assign_expr: ID OP_ASSIGN . relop_expr

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    relop_expr    go to state 208
    relop_term    go to state 58
    relop_factor  go to state 59
    expr          go to state 60
    term          go to state 61
    factor        go to state 62
    var_ref       go to state 63


state 201

   56 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON . relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    $default  reduce using rule 84 (relop_expr_list)

    relop_expr                go to state 134
    relop_term                go to state 58
    relop_factor              go to state 59
    relop_expr_list           go to state 209
    nonempty_relop_expr_list  go to state 136
    expr                      go to state 60
    term                      go to state 61
    factor                    go to state 62
    var_ref                   go to state 63


state 202

   67 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA . assign_expr

    ID         shift, and go to state 180
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    assign_expr   go to state 210
    relop_expr    go to state 184
    relop_term    go to state 58
    relop_factor  go to state 59
    expr          go to state 60
    term          go to state 61
    factor        go to state 62
    var_ref       go to state 63


state 203

   57 stmt: var_ref OP_ASSIGN relop_expr MK_SEMICOLON .

    $default  reduce using rule 57 (stmt)


state 204

   16 dim_fn: dim_fn MK_LB expr MK_RB .

    $default  reduce using rule 16 (dim_fn)


state 205

   60 stmt: ID MK_LPAREN param_list MK_RPAREN MK_SEMICOLON .

    $default  reduce using rule 60 (stmt)


state 206

   58 stmt: IF MK_LPAREN nonempty_relop_expr_list MK_LPAREN stmt .
   59     | IF MK_LPAREN nonempty_relop_expr_list MK_LPAREN stmt . ELSE stmt

    ELSE  shift, and go to state 211

    ELSE      [reduce using rule 58 (stmt)]
    $default  reduce using rule 58 (stmt)


state 207

   55 stmt: WHILE MK_LPAREN nonempty_relop_expr_list MK_LPAREN stmt .

    $default  reduce using rule 55 (stmt)


state 208

   69 assign_expr: ID OP_ASSIGN relop_expr .
   72 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 92

    $default  reduce using rule 69 (assign_expr)


state 209

   56 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list . MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  shift, and go to state 212


state 210

   67 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr .

    $default  reduce using rule 67 (nonempty_assign_expr_list)


state 211

   59 stmt: IF MK_LPAREN nonempty_relop_expr_list MK_LPAREN stmt ELSE . stmt

    ID            shift, and go to state 159
    IF            shift, and go to state 116
    WHILE         shift, and go to state 117
    FOR           shift, and go to state 118
    MK_LBRACE     shift, and go to state 119
    MK_SEMICOLON  shift, and go to state 120
    RETURN        shift, and go to state 121

    stmt     go to state 213
    var_ref  go to state 127


state 212

   56 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON . assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 180
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    $default  reduce using rule 66 (assign_expr_list)

    assign_expr_list           go to state 214
    nonempty_assign_expr_list  go to state 182
    assign_expr                go to state 183
    relop_expr                 go to state 184
    relop_term                 go to state 58
    relop_factor               go to state 59
    expr                       go to state 60
    term                       go to state 61
    factor                     go to state 62
    var_ref                    go to state 63


state 213

   59 stmt: IF MK_LPAREN nonempty_relop_expr_list MK_LPAREN stmt ELSE stmt .

    $default  reduce using rule 59 (stmt)


state 214

   56 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list . MK_RPAREN stmt

    MK_RPAREN  shift, and go to state 215


state 215

   56 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN . stmt

    ID            shift, and go to state 159
    IF            shift, and go to state 116
    WHILE         shift, and go to state 117
    FOR           shift, and go to state 118
    MK_LBRACE     shift, and go to state 119
    MK_SEMICOLON  shift, and go to state 120
    RETURN        shift, and go to state 121

    stmt     go to state 216
    var_ref  go to state 127


state 216

   56 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt .

    $default  reduce using rule 56 (stmt)
